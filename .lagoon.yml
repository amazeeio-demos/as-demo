---
docker-compose-yaml: docker-compose.yml

production_routes:
  active:
    routes:
      - nginx:
        - as-demo.test6.amazee.io:
            tls-acme: true
  standby:
    routes:
      - nginx:
        - as-demo-standby.test6.amazee.io:
            tls-acme: true

environments:
  master:
    cronjobs:
      - 
        name: Drupal cron with notifications
        schedule: 'M * * * *'
        command: >
          /app/vendor/bin/govcms-drush cron
          --root=/app
        service: cli
  master-alt:
    cronjobs:
      - 
        name: Drupal cron with notifications
        schedule: 'M * * * *'
        command: >
          /app/vendor/bin/govcms-drush cron
          --root=/app
        service: cli
tasks:
  pre-rollout:
    - 
      run:
        name: Pre-rollout database updates
        command: "[ -f /app/vendor/bin/govcms-pre-deploy-db-update ] && /app/vendor/bin/govcms-pre-deploy-db-update || echo 'Pre Update databse is not available.'"
        service: cli
        shell: bash
    - 
      run:
        name: Snapshot the database and store
        command: "[ -f /app/vendor/bin/govcms-db-backup ] && /app/vendor/bin/govcms-db-backup || echo 'Database backup is not available.'"
        service: cli
        shell: bash
    - 
      run:
        name: Snapshot the config and store
        command: "[ -f /app/vendor/bin/govcms-config-backup ] && /app/vendor/bin/govcms-config-backup || echo 'Config backup is not available.'"
        service: cli
        shell: bash
    - run:
        name: Run backup even in development
        command: LAGOON_ENVIRONMENT_TYPE=production /app/vendor/bin/govcms-db-backup
        service: cli
        shell: bash
        when: LAGOON_ENVIRONMENT_TYPE=="development"
    - run:
        name: Show backups
        command: ls -al /app/web/sites/default/files/private/backups
        shell: bash

  post-rollout:

    - run:
        name: Check if development
        command: touch /tmp/test-1-development
        service: cli
        shell: bash
        when: LAGOON_ENVIRONMENT_TYPE=="development"
    - run:
        name: Check if not production
        command: touch /tmp/test-2-not-production
        service: cli
        shell: bash
        when: LAGOON_ENVIRONMENT_TYPE!="production"
    - run:
        name: Check if development
        command: touch /tmp/test-3-production-should-not-write
        service: cli
        shell: bash
        when: LAGOON_ENVIRONMENT_TYPE=="production"
    - run:
        name: Check git branch regex
        command: touch /tmp/test-4-branch-regex
        service: cli
        shell: bash
        when: LAGOON_GIT_BRANCH=~".*-broken"
    - run:
        name: Check variable exists
        command: touch /tmp/test-5-var-exists
        service: cli
        shell: bash
        when: exists("LAGOON_KUBERNETES")
    - run:
        name: Check build variable exists
        command: touch /tmp/test-6-env-var-exists
        service: cli
        shell: bash
        when: LAGOON_API_VARIABLE_ENVIRONMENT=="TASK_TEST_VAR"
    - run:
        name: Run with default variable
        command: touch /tmp/test-7-default-var
        service: cli
        shell: bash
        when: withDefault("TASK_ADDITIONAL_TEST_VAR", "true") == "true"
    - run:
        name: Show results
        command: ls -al /tmp/test-*
        service: cli
        shell: bash
    - 
      run:
        name: Prepare the site for deployment
        command: /app/vendor/bin/govcms-update_site_alias
        service: cli
        shell: bash
    - 
      run:
        name: Prevent elevated permissions
        command: >
          /app/vendor/bin/govcms-validate-permissions
        service: cli
        shell: bash
    - 
      run:
        name: Validate theme YAML files
        command: >
          /app/vendor/bin/govcms-validate-theme-yml
          || true
        service: cli
        shell: bash
    - 
      run:
        name: Synchronise the database
        command: /app/vendor/bin/govcms-db-sync
        service: cli
        shell: bash
    - 
      run:
        name: Perform database updates
        command: /app/vendor/bin/govcms-db-update
        service: cli
        shell: bash
    - 
      run:
        name: Perform config import
        command: /app/vendor/bin/govcms-config-import
        service: cli
        shell: bash
    - 
      run:
        name: Perform cache rebuild
        command: /app/vendor/bin/govcms-cache-rebuild
        service: cli
        shell: bash
    - 
      run:
        name: Ensure GovCMS/Lagoon modules are enabled
        command: /app/vendor/bin/govcms-enable_modules
        service: cli
        shell: bash
    - 
      run:
        name: Preserve the last successful backup
        command: /app/vendor/bin/govcms-backups-preserve
        service: cli
        shell: bash
routes:
  insecure: Redirect
